@page "/ticker"
@inject TickerService TickerService

<h3 class="ticker-title" style="width: 75%">Barker's Bottom Line</h3>

<div class="ticker-wrap">
    <div class="ticker" style="@TickerStyle">
        @for (int i = 0; i < TickerItems.Count; i++)
        {
            <div class="ticker-item" @key="@i">
                @((MarkupString)TickerItems[i])
            </div>
        }
    </div>
</div>
<script src="js\ticker.js"></script>
@code {
    private List<string> TickerItems = new();
    private string TickerStyle = "";

    protected override async Task OnInitializedAsync()
    {
        // Fetch sports data
        var sports = await TickerService.GetTeamEventsAsync();
        if (sports == null || !sports.Any())
        {
            sports = new List<string> { "No sports data available." };
        }
        // Fetch local events
        var events = await TickerService.GetLocalEventsAsync();
        if (events == null || !events.Any())
        {
            events = new List<string> { "No local events available." };
        }
        // Fetch stock prices
        var stocks = await TickerService.GetStockPricesAsync();
        if (stocks == null || !stocks.Any())
        {
            stocks = new List<string> { "No stock data available." };
        }
        // Fetch school events
        var schoolEvents = await TickerService.GetSchoolEventsAsync();
        if (schoolEvents == null || !schoolEvents.Any())
        {
            schoolEvents = new List<string> { "No school events available." };
        }
        // Combine all ticker items
        TickerItems = sports.Concat(events).Concat(stocks).Concat(schoolEvents).ToList();
            if (!TickerItems.Any())
            {
                TickerItems.Add("No items available.");
            }
        // Duplicate for scrolling effect
        TickerItems.AddRange(TickerItems);
        //TickerStyle = $"animation: scroll {TickerItems.Count * 5}s ease infinite; max-width: 100%; overflow: hidden;";
        //TickerStyle = $"width: auto; height: 90px;";
    }
}
